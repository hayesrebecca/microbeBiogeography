rm(list=ls())#
library(igraph)#
library(bipartite)#
library(lme4)#
setwd('~/Dropbox/skyIslands/analysis/network-assembly')#
source('src/prepNets.R')#
source('src/CalcMetrics.R')#
source('src/misc.R')#
spec <-  read.csv("../data/spec.csv")
head(spec.)
head(spec)
colnames(spec)
rm(list=ls())#
library(igraph)#
library(bipartite)#
library(lme4)#
setwd('~/Dropbox/skyIslands/analysis/network-assembly')#
source('src/prepNets.R')#
source('src/CalcMetrics.R')#
source('src/misc.R')#
spec <-  read.csv("../data/spec.csv")#
#
## ************************************************************#
## create site by year neworks and calculate statistics#
## (in terminal)#
## ************************************************************#
## create pp matrix for each site, year#
nets <- break.net(spec)
sites <- split(spec.dat, spec.dat$Site)
sites
colnames(spec.dat)
spec.dat$Year
networks<-by.site
networks<-sites
comms <- rapply(networks, function(y){#
    samp2site.spp(site=y[,"PlantGenusSpecies"],#
                  spp=y[,"GenusSpecies"],#
                  abund=rep(1, nrow(y)))#
  }, how="replace")
colnames(spec)
plant.nam <- "PlantGenSp"
pol.nam <- "GenSp"
comms <- rapply(networks, function(y){#
    samp2site.spp(site=y[, plant.name],#
                  spp=y[, pol.nam],#
                  abund=rep(1, nrow(y)))#
  }, how="replace")
comms <- rapply(networks, function(y){#
    samp2site.spp(site=y[, plant.nam],#
                  spp=y[, pol.nam],#
                  abund=rep(1, nrow(y)))#
  }, how="replace")
networks
comms <- lapply(networks, function(y){#
      samp2site.spp(site=y[, plant.nam],#
                    spp=y[, pol.nam],#
                    abund=rep(1, nrow(y)))
)
comms <- lapply(networks, function(y){#
      samp2site.spp(site=y[, plant.nam],#
                    spp=y[, pol.nam],#
                    abund=rep(1, nrow(y)))#
    })
comms
drop.net <- function(z)#
    z[!sapply(z, FUN=function(q){#
      any(dim(q) < 3)#
    })]#
  adj.mat <- unlist(lapply(comms, drop.net), recursive=FALSE)
adj.mat
comms <- lapply(networks, function(y){#
      samp2site.spp(site=y[, plant.nam],#
                    spp=y[, pol.nam],#
                    abund=rep(1, nrow(y)))#
    })#
     adj.mat <- lapply(comms, drop.net)
adj.mat
head(adj.mat)
comms
head(comms[[1]])
Q
rm(list=ls())#
library(igraph)#
library(bipartite)#
library(lme4)#
setwd('~/Dropbox/skyIslands/analysis/network-assembly')#
source('src/prepNets.R')#
source('src/CalcMetrics.R')#
source('src/misc.R')#
spec <-  read.csv("../data/spec.csv")#
#
## ************************************************************#
## create site by year neworks and calculate statistics#
## (in terminal)#
## ************************************************************#
## create pp matrix for each site, year#
nets <- break.net(spec)
z
z[!sapply(z, FUN=function(q){#
      any(dim(q) < 3)#
    })]
rm(list=ls())#
library(igraph)#
library(bipartite)#
library(lme4)#
setwd('~/Dropbox/skyIslands/analysis/network-assembly')#
source('src/prepNets.R')#
source('src/CalcMetrics.R')#
source('src/misc.R')#
spec <-  read.csv("../data/spec.csv")#
#
## ************************************************************#
## create site by year neworks and calculate statistics#
## (in terminal)#
## ************************************************************#
## create pp matrix for each site, year#
nets <- break.net(spec)
rm(list=ls())#
library(igraph)#
library(bipartite)#
library(lme4)#
setwd('~/Dropbox/skyIslands/analysis/network-assembly')#
source('src/prepNets.R')#
source('src/CalcMetrics.R')#
source('src/misc.R')#
spec <-  read.csv("../data/spec.csv")
nets <- break.net(spec)
nets[[1]]
names(nets)
nulls <- lapply(nets, vaznull, N=100)#
save(nulls, file='saved/nulls/all.Rdata')
load(file='saved/corMets.Rdata')#
source('plotting/plotNetMets.R')
head(cor.mets)
load(file='saved/corMets.Rdata')
cor.dats
?network.level
library(bipatite)
library(bipartite)
library(bipatite)
?network.level
?networklevel
?networklevel
rm(list=ls())#
library(igraph)#
library(bipartite)#
library(lme4)#
setwd('~/Dropbox/skyIslands/analysis/network-assembly')#
source('src/prepNets.R')#
source('src/CalcMetrics.R')#
source('src/misc.R')#
spec <-  read.csv("../data/spec.csv")#
N <- 100#
#
## ************************************************************#
## create site by year neworks and calculate statistics#
## (in terminal)#
## ************************************************************#
## create pp matrix for each site, year#
nets <- break.net(spec)#
#
## ************************************************************#
## individuals nulls#
## ************************************************************#
## nulls <- lapply(nets, vaznull, N=N)#
## save(nulls, file='saved/nulls/all.Rdata')#
#
## ************************************************************#
## calculate metrics and zscores#
## ************************************************************#
load(file='saved/nulls/all.Rdata')
mets <- lapply(nets, calc.metric)#
null.mets <- rapply(nulls, calc.metric, how="replace")#
null.mets <- lapply(null.mets, function(x) do.call(rbind, x))#
load(file='saved/nullMets.Rdata')#
#
cor.mets <- mapply(function(a, b)#
                   cor.metrics(true.stat= a,#
                               null.stat= b,#
                               N=N),#
                   a=mets,#
                   b=null.mets,#
                   SIMPLIFY=FALSE)#
#
cor.dats <- prep.dat(cor.mets,  spec)#
save(cor.dats, file='saved/corMets.Rdata')
source('src/CalcMetrics.R')
source('src/CalcMetrics.R')
rm(list=ls())#
library(igraph)#
library(bipartite)#
library(lme4)#
setwd('~/Dropbox/skyIslands/analysis/network-assembly')#
source('src/prepNets.R')#
source('src/CalcMetrics.R')#
source('src/misc.R')#
spec <-  read.csv("../data/spec.csv")#
N <- 100#
#
## ************************************************************#
## create site by year neworks and calculate statistics#
## (in terminal)#
## ************************************************************#
## create pp matrix for each site, year#
nets <- break.net(spec)#
#
## ************************************************************#
## individuals nulls#
## ************************************************************#
## nulls <- lapply(nets, vaznull, N=N)#
## save(nulls, file='saved/nulls/all.Rdata')#
#
## ************************************************************#
## calculate metrics and zscores#
## ************************************************************#
load(file='saved/nulls/all.Rdata')#
#
mets <- lapply(nets, calc.metric)#
null.mets <- rapply(nulls, calc.metric, how="replace")#
null.mets <- lapply(null.mets, function(x) do.call(rbind, x))#
load(file='saved/nullMets.Rdata')#
#
cor.mets <- mapply(function(a, b)#
                   cor.metrics(true.stat= a,#
                               null.stat= b,#
                               N=N),#
                   a=mets,#
                   b=null.mets,#
                   SIMPLIFY=FALSE)#
#
cor.dats <- prep.dat(cor.mets,  spec)#
save(cor.dats, file='saved/corMets.Rdata')
save(null.mets, file='saved/nullMets.Rdata')
cor.dats
lapply(nets, networkLevel, index="niche overlap")
lapply(nets, networklevel, index="niche overlap")
rm(list=ls())#
library(igraph)#
library(bipartite)#
library(lme4)#
setwd('~/Dropbox/skyIslands/analysis/network-assembly')#
source('src/prepNets.R')#
source('src/CalcMetrics.R')#
source('src/misc.R')#
spec <-  read.csv("../data/spec.csv")#
N <- 100#
#
## ************************************************************#
## create site by year neworks and calculate statistics#
## (in terminal)#
## ************************************************************#
## create pp matrix for each site, year#
nets <- break.net(spec)#
#
## ************************************************************#
## individuals nulls#
## ************************************************************#
## nulls <- lapply(nets, vaznull, N=N)#
## save(nulls, file='saved/nulls/all.Rdata')#
#
## ************************************************************#
## calculate metrics and zscores#
## ************************************************************#
load(file='saved/nulls/all.Rdata')#
#
mets <- lapply(nets, calc.metric)#
null.mets <- rapply(nulls, calc.metric, how="replace")#
null.mets <- lapply(null.mets, function(x) do.call(rbind, x))#
save(null.mets, file='saved/nullMets.Rdata')#
#
load(file='saved/nullMets.Rdata')#
#
cor.mets <- mapply(function(a, b)#
                   cor.metrics(true.stat= a,#
                               null.stat= b,#
                               N=N),#
                   a=mets,#
                   b=null.mets,#
                   SIMPLIFY=FALSE)#
#
cor.dats <- prep.dat(cor.mets,  spec)#
save(cor.dats, file='saved/corMets.Rdata')
rm(list=ls())#
library(igraph)#
library(bipartite)#
library(lme4)#
setwd('~/Dropbox/skyIslands/analysis/network-assembly')#
source('src/prepNets.R')#
source('src/CalcMetrics.R')#
source('src/misc.R')#
spec <-  read.csv("../data/spec.csv")#
N <- 100#
#
## ************************************************************#
## create site by year neworks and calculate statistics#
## (in terminal)#
## ************************************************************#
## create pp matrix for each site, year#
nets <- break.net(spec)#
#
## ************************************************************#
## individuals nulls#
## ************************************************************#
## nulls <- lapply(nets, vaznull, N=N)#
## save(nulls, file='saved/nulls/all.Rdata')#
#
## ************************************************************#
## calculate metrics and zscores#
## ************************************************************#
load(file='saved/nulls/all.Rdata')#
#
mets <- lapply(nets, calc.metric)#
null.mets <- rapply(nulls, calc.metric, how="replace")#
null.mets <- lapply(null.mets, function(x) do.call(rbind, x))#
save(null.mets, file='saved/nullMets.Rdata')#
#
load(file='saved/nullMets.Rdata')#
#
cor.mets <- mapply(function(a, b)#
                   cor.metrics(true.stat= a,#
                               null.stat= b,#
                               N=N),#
                   a=mets,#
                   b=null.mets,#
                   SIMPLIFY=FALSE)#
#
cor.dats <- prep.dat(cor.mets,  spec)#
save(cor.dats, file='saved/corMets.Rdata')
cor.dats
plot(nicheOverlapPol ~ 1:5, data=cor.dats)
plot(cor.dats$nicheOverlapPol ~ 1:5)
plot(y=cor.dats$nicheOverlapPol, x= 1:5)
cor.dats$Site[from.Rockies]
from.Rockies <- ("JC", "SC", "MM", "PL", "CH")#
cor.dats$Site[from.Rockies]
from.Rockies <- c("JC", "SC", "MM", "PL", "CH")#
cor.dats$Site[from.Rockies]
from.Rockies
class(cor.dats$Site)
cor.dats$Site
cor.dats$Site[from.Rockies]
class(from.Rockies)
order(from.Rockies)
order(cor.dats$Site, from.Rockies)
cor.dats$Site[order(from.Rockies)]
match(from.Rockies, core.dats$Site)
match(from.Rockies, cor.dats$Site)
cor.dats[match(from.Rockies, cor.dats$Site),]
cor.dats <- cor.dats[match(from.Rockies, cor.dats$Site),]
plot(y=cor.dats$nicheOverlapPol, x= 1:5)
plot(y=cor.dats$nicheOverlapPlants, x= 1:5)
cor.dats$nicheOverlapPlants
head(cor.dats)
plot(y=cor.dats$nicheOverlapPlant, x= 1:5)
plot(y=cor.dats$nicheOverlapPol, x= 1:5,#
     xlab = "Niche overlap",#
     ylab = "Distance from Rockies"#
     pch=16)
plot(y=cor.dats$nicheOverlapPol, x= 1:5,#
     xlab = "Niche overlap",#
     ylab = "Distance from Rockies",#
     xaxt="n",#
     pch=16)
plot(y=cor.dats$nicheOverlapPol, x= 1:5,#
     xlab = "Niche overlap",#
     ylab = "Distance from Rockies",#
     xaxt="n",#
     pch=16, cex=1.5)
plot(y=cor.dats$nicheOverlapPol, x= 1:5,#
     xlab = "Niche overlap",#
     ylab = "Distance from Rockies",#
     xaxt="n",#
     pch=16, cex=1.5,#
     las=2)
plot(y=cor.dats$nicheOverlapPol, x= 1:5,#
     ylab = "Niche overlap",#
     xlab = "Distance from Rockies",#
     xaxt="n",#
     pch=16, cex=1.5,#
     las=2)
plot(y=cor.dats$nicheOverlapPol, x= 1:5,#
     ylab = "Niche overlap",#
     xlab = "Distance from Rockies",#
     xaxt="n",#
     pch=16, cex=1.5,#
     las=2, cex.axis=1.5)
plot(y=cor.dats$nicheOverlapPol, x= 1:5,#
   ylab=""#
     xlab = "Distance from Rockies",#
     xaxt="n",#
     pch=16, cex=1.5,#
     las=2, cex.axis=1.5)
plot(y=cor.dats$nicheOverlapPol, x= 1:5,#
   ylab="",#
     xlab = "Distance from Rockies",#
     xaxt="n",#
     pch=16, cex=1.5,#
     las=2, cex.axis=1.5)
plot(y=1-cor.dats$nicheOverlapPol, x= 1:5,#
   ylab="",#
     xlab = "Distance from Rockies",#
     xaxt="n",#
     pch=16, cex=1.5,#
     las=2, cex.axis=1.5)
plot(y=1-cor.dats$nicheOverlapPlant, x= 1:5,#
   ylab="",#
     xlab = "Distance from Rockies",#
     xaxt="n",#
     pch=16, cex=1.5,#
     las=2, cex.axis=1.5)
plot(y=1-cor.dats$zNODF, x= 1:5,#
   ylab="",#
     xlab = "Distance from Rockies",#
     xaxt="n",#
     pch=16, cex=1.5,#
     las=2, cex.axis=1.5)
plot(y=1-cor.dats$zmode, x= 1:5,#
   ylab="",#
     xlab = "Distance from Rockies",#
     xaxt="n",#
     pch=16, cex=1.5,#
     las=2, cex.axis=1.5)
head(cor.dats)
plot(y=1-cor.dats$zmodD, x= 1:5,#
   ylab="",#
     xlab = "Distance from Rockies",#
     xaxt="n",#
     pch=16, cex=1.5,#
     las=2, cex.axis=1.5)
