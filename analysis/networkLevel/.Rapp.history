rm(list=ls())#
library(vegan)#
library(fields)#
library(bipartite)#
setwd("~/Dropbox/skyIslands/analysis/data")#
source("src/misc.R")#
src.dir <- '../../data/relational/data/relational/traditional/'#
spec <-#
  read.csv(file.path(src.dir, "specimens-complete.csv")#
#
##get specimen data ready#
spec <-  spec[spec$Species != "",]#
spec$GenSp <- fix.white.space(paste(spec$Genus, #
                          spec$Species,#
                          spec$SubSpecies))#
#
spec$PlantGenSp <-  fix.white.space(paste(spec$PlantGenus,#
                                          spec$PlantSpecies,#
                                          spec$PlantVar, spec$PlantSubSpecies))#
spec$Int <-  fix.white.space(paste(spec$GenSp, spec$PlantGenSp))#
spec$IntGen <-  fix.white.space(paste(spec$Genus, spec$PlantGenus))#
#
prep.comm <- aggregate(spec$GenSp,#
                       list(site=spec$PlantGenSp,#
                            sp=spec$GenSp), length)#
comm <- samp2site.spp(prep.comm$site, prep.comm$sp, prep.comm$x)#
#
d <- specieslevel(comm, index="d")#
#
spec$PolSpec <- d$'higher level'$'d'[match(spec$GenSp,#
                                             rownames(d$'higher level'))]#
#
spec$PlantSpec <- d$'lower level'$'d'[match(spec$PlantGenSp,#
                                             rownames(d$'lower level'))]#
write.csv(spec, "spec.csv", row.names=FALSE)#
save(spec, file="spec.Rdata")#
### networks#
nets <- breakNet(spec, 'Site', 'Year')
rm(list=ls())#
library(vegan)#
library(fields)#
library(bipartite)#
setwd("~/Dropbox/skyIslands/analysis/data")#
source("src/misc.R")#
src.dir <- '../../data/relational/data/relational/traditional/'#
spec <-#
  read.csv(file.path(src.dir, "specimens-complete.csv")#
#
##get specimen data ready#
spec <-  spec[spec$Species != "",]#
spec$GenSp <- fix.white.space(paste(spec$Genus, #
                          spec$Species,#
                          spec$SubSpecies))#
#
spec$PlantGenSp <-  fix.white.space(paste(spec$PlantGenus,#
                                          spec$PlantSpecies,#
                                          spec$PlantVar, spec$PlantSubSpecies))#
spec$Int <-  fix.white.space(paste(spec$GenSp, spec$PlantGenSp))#
spec$IntGen <-  fix.white.space(paste(spec$Genus, spec$PlantGenus))#
#
prep.comm <- aggregate(spec$GenSp,#
                       list(site=spec$PlantGenSp,#
                            sp=spec$GenSp), length)#
comm <- samp2site.spp(prep.comm$site, prep.comm$sp, prep.comm$x)#
#
d <- specieslevel(comm, index="d")#
#
spec$PolSpec <- d$'higher level'$'d'[match(spec$GenSp,#
                                             rownames(d$'higher level'))]#
#
spec$PlantSpec <- d$'lower level'$'d'[match(spec$PlantGenSp,#
                                             rownames(d$'lower level'))]#
write.csv(spec, "spec.csv", row.names=FALSE)#
save(spec, file="spec.Rdata")#
### networks#
nets <- breakNet(spec, 'Site', 'Year')
rm(list=ls())#
library(vegan)#
library(fields)#
library(bipartite)#
setwd("~/Dropbox/skyIslands/analysis/data")#
source("src/misc.R")#
src.dir <- '../../data/relational/data/relational/traditional/'#
spec <-#
  read.csv(file.path(src.dir, "specimens-complete.csv")#
#
##get specimen data ready#
spec <-  spec[spec$Species != "",]#
spec$GenSp <- fix.white.space(paste(spec$Genus, #
                          spec$Species,#
                          spec$SubSpecies))#
#
spec$PlantGenSp <-  fix.white.space(paste(spec$PlantGenus,#
                                          spec$PlantSpecies,#
                                          spec$PlantVar, spec$PlantSubSpecies))#
spec$Int <-  fix.white.space(paste(spec$GenSp, spec$PlantGenSp))#
spec$IntGen <-  fix.white.space(paste(spec$Genus, spec$PlantGenus))#
#
prep.comm <- aggregate(spec$GenSp,#
                       list(site=spec$PlantGenSp,#
                            sp=spec$GenSp), length)#
comm <- samp2site.spp(prep.comm$site, prep.comm$sp, prep.comm$x)#
#
d <- specieslevel(comm, index="d")#
#
spec$PolSpec <- d$'higher level'$'d'[match(spec$GenSp,#
                                             rownames(d$'higher level'))]#
#
spec$PlantSpec <- d$'lower level'$'d'[match(spec$PlantGenSp,#
                                             rownames(d$'lower level'))]#
write.csv(spec, "spec.csv", row.names=FALSE)#
save(spec, file="spec.Rdata")#
### networks#
nets <- breakNet(spec, 'Site', 'Year')
rm(list=ls())#
library(vegan)#
library(fields)#
library(bipartite)#
setwd("~/Dropbox/skyIslands/analysis/data")#
source("src/misc.R")#
src.dir <- '../../data/relational/data/relational/traditional/'#
spec <-#
  read.csv(file.path(src.dir, "specimens-complete.csv")#
#
##get specimen data ready#
spec <-  spec[spec$Species != "",]#
spec$GenSp <- fix.white.space(paste(spec$Genus, #
                          spec$Species,#
                          spec$SubSpecies))#
#
spec$PlantGenSp <-  fix.white.space(paste(spec$PlantGenus,#
                                          spec$PlantSpecies,#
                                          spec$PlantVar, spec$PlantSubSpecies))#
spec$Int <-  fix.white.space(paste(spec$GenSp, spec$PlantGenSp))#
spec$IntGen <-  fix.white.space(paste(spec$Genus, spec$PlantGenus))#
#
prep.comm <- aggregate(spec$GenSp,#
                       list(site=spec$PlantGenSp,#
                            sp=spec$GenSp), length)#
comm <- samp2site.spp(prep.comm$site, prep.comm$sp, prep.comm$x)#
#
d <- specieslevel(comm, index="d")#
#
spec$PolSpec <- d$'higher level'$'d'[match(spec$GenSp,#
                                             rownames(d$'higher level'))]#
#
spec$PlantSpec <- d$'lower level'$'d'[match(spec$PlantGenSp,#
                                             rownames(d$'lower level'))]#
write.csv(spec, "spec.csv", row.names=FALSE)#
save(spec, file="spec.Rdata")#
### networks#
nets <- breakNet(spec, 'Site', 'Year')
rm(list=ls())#
library(vegan)#
library(fields)#
library(bipartite)#
setwd("~/Dropbox/skyIslands/analysis/data")#
source("src/misc.R")#
src.dir <- '../../data/relational/data/relational/traditional/'#
spec <-#
  read.csv(file.path(src.dir, "specimens-complete.csv"))
## get specimen data ready#
spec <-  spec[spec$Species != "",]#
spec$GenSp <- fix.white.space(paste(spec$Genus, #
                          spec$Species,#
                          spec$SubSpecies))#
#
spec$PlantGenSp <-  fix.white.space(paste(spec$PlantGenus,#
                                          spec$PlantSpecies,#
                                          spec$PlantVar, spec$PlantSubSpecies))#
spec$Int <-  fix.white.space(paste(spec$GenSp, spec$PlantGenSp))#
spec$IntGen <-  fix.white.space(paste(spec$Genus, spec$PlantGenus))#
#
prep.comm <- aggregate(spec$GenSp,#
                       list(site=spec$PlantGenSp,#
                            sp=spec$GenSp), length)#
comm <- samp2site.spp(prep.comm$site, prep.comm$sp, prep.comm$x)#
#
d <- specieslevel(comm, index="d")#
#
spec$PolSpec <- d$'higher level'$'d'[match(spec$GenSp,#
                                             rownames(d$'higher level'))]#
#
spec$PlantSpec <- d$'lower level'$'d'[match(spec$PlantGenSp,#
                                             rownames(d$'lower level'))]#
write.csv(spec, "spec.csv", row.names=FALSE)#
save(spec, file="spec.Rdata")#
### networks#
nets <- breakNet(spec, 'Site', 'Year')
source("src/prepNets.R")
nets <- breakNet(spec, 'Site', 'Year')
head(spec)
rm(list=ls())#
library(vegan)#
library(fields)#
library(bipartite)#
setwd("~/Dropbox/skyIslands/analysis/data")#
source("src/misc.R")#
source("src/prepNets.R")#
src.dir <- '../../data/relational/data/relational/traditional/'#
spec <-#
  read.csv(file.path(src.dir, "specimens-complete.csv"))#
#
## get specimen data ready#
spec <-  spec[spec$Species != "",]#
spec$GenSp <- fix.white.space(paste(spec$Genus, #
                          spec$Species,#
                          spec$SubSpecies))#
#
spec$PlantGenSp <-  fix.white.space(paste(spec$PlantGenus,#
                                          spec$PlantSpecies,#
                                          spec$PlantVar, spec$PlantSubSpecies))#
spec$Int <-  fix.white.space(paste(spec$GenSp, spec$PlantGenSp))#
spec$IntGen <-  fix.white.space(paste(spec$Genus, spec$PlantGenus))#
#
prep.comm <- aggregate(spec$GenSp,#
                       list(site=spec$PlantGenSp,#
                            sp=spec$GenSp), length)#
comm <- samp2site.spp(prep.comm$site, prep.comm$sp, prep.comm$x)#
#
d <- specieslevel(comm, index="d")#
#
spec$PolSpec <- d$'higher level'$'d'[match(spec$GenSp,#
                                             rownames(d$'higher level'))]#
#
spec$PlantSpec <- d$'lower level'$'d'[match(spec$PlantGenSp,#
                                             rownames(d$'lower level'))]#
#
spec$Date <- as.Date(spec$Date, format='%m/%d/%y')#
spec$doy <- as.numeric(strftime(spec$Date, format='%j'))#
spec$Year <- as.factor(spec$Year)#
write.csv(spec, "spec.csv", row.names=FALSE)#
save(spec, file="spec.Rdata")#
### networks#
nets <- breakNet(spec, 'Site', 'Year')
colnames(spec)
rm(list=ls())#
library(vegan)#
library(fields)#
library(bipartite)#
setwd("~/Dropbox/skyIslands/analysis/data")#
source("src/misc.R")#
source("src/prepNets.R")#
src.dir <- '../../data/relational/data/relational/traditional/'#
spec <-#
  read.csv(file.path(src.dir, "specimens-complete.csv"))#
#
## get specimen data ready#
spec <-  spec[spec$Species != "",]#
spec$GenusSpecies <- fix.white.space(paste(spec$Genus, #
                          spec$Species,#
                          spec$SubSpecies))#
#
spec$PlantGenusSpecies <-  fix.white.space(paste(spec$PlantGenus,#
                                          spec$PlantSpecies,#
                                          spec$PlantVar, spec$PlantSubSpecies))#
spec$Int <-  fix.white.space(paste(spec$GenSp, spec$PlantGenSp))#
spec$IntGen <-  fix.white.space(paste(spec$Genus, spec$PlantGenus))#
#
prep.comm <- aggregate(spec$GenSp,#
                       list(site=spec$PlantGenSp,#
                            sp=spec$GenSp), length)#
comm <- samp2site.spp(prep.comm$site, prep.comm$sp, prep.comm$x)#
#
d <- specieslevel(comm, index="d")#
#
spec$PolSpec <- d$'higher level'$'d'[match(spec$GenSp,#
                                             rownames(d$'higher level'))]#
#
spec$PlantSpec <- d$'lower level'$'d'[match(spec$PlantGenSp,#
                                             rownames(d$'lower level'))]#
#
spec$Date <- as.Date(spec$Date, format='%m/%d/%y')#
spec$doy <- as.numeric(strftime(spec$Date, format='%j'))#
spec$Year <- as.factor(spec$Year)#
write.csv(spec, "spec.csv", row.names=FALSE)#
save(spec, file="spec.Rdata")#
### networks#
nets <- breakNet(spec, 'Site', 'Year')
rm(list=ls())#
library(vegan)#
library(fields)#
library(bipartite)#
setwd("~/Dropbox/skyIslands/analysis/data")#
source("src/misc.R")#
source("src/prepNets.R")#
src.dir <- '../../data/relational/data/relational/traditional/'#
spec <-#
  read.csv(file.path(src.dir, "specimens-complete.csv"))#
#
## get specimen data ready#
spec <-  spec[spec$Species != "",]#
spec$GenusSpecies <- fix.white.space(paste(spec$Genus, #
                          spec$Species,#
                          spec$SubSpecies))#
#
spec$PlantGenusSpecies <-  fix.white.space(paste(spec$PlantGenus,#
                                          spec$PlantSpecies,#
                                          spec$PlantVar, spec$PlantSubSpecies))#
spec$Int <-  fix.white.space(paste(spec$GenusSpecies, spec$PlantGenusSpecies))#
spec$IntGen <-  fix.white.space(paste(spec$Genus, spec$PlantGenus))#
#
prep.comm <- aggregate(spec$GenusSpecies,#
                       list(site=spec$PlantGenusSpecies,#
                            sp=spec$GenusSpecies), length)#
comm <- samp2site.spp(prep.comm$site, prep.comm$sp, prep.comm$x)#
#
d <- specieslevel(comm, index="d")#
#
spec$PolSpec <- d$'higher level'$'d'[match(spec$GenusSpecies,#
                                             rownames(d$'higher level'))]#
#
spec$PlantSpec <- d$'lower level'$'d'[match(spec$PlantGenusSpecies,#
                                             rownames(d$'lower level'))]#
#
spec$Date <- as.Date(spec$Date, format='%m/%d/%y')#
spec$doy <- as.numeric(strftime(spec$Date, format='%j'))#
spec$Year <- as.factor(spec$Year)#
write.csv(spec, "spec.csv", row.names=FALSE)#
save(spec, file="spec.Rdata")#
### networks#
nets <- breakNet(spec, 'Site', 'Year')
spec$Year <- as.numeric(format(spec$Date,'%Y'))
head(spec)
rm(list=ls())#
library(vegan)#
library(fields)#
library(bipartite)#
setwd("~/Dropbox/skyIslands/analysis/data")#
source("src/misc.R")#
source("src/prepNets.R")#
src.dir <- '../../data/relational/data/relational/traditional/'#
spec <-#
  read.csv(file.path(src.dir, "specimens-complete.csv"))#
#
## get specimen data ready#
spec <-  spec[spec$Species != "",]#
spec$GenusSpecies <- fix.white.space(paste(spec$Genus, #
                          spec$Species,#
                          spec$SubSpecies))#
#
spec$PlantGenusSpecies <-  fix.white.space(paste(spec$PlantGenus,#
                                          spec$PlantSpecies,#
                                          spec$PlantVar, spec$PlantSubSpecies))#
spec$Int <-  fix.white.space(paste(spec$GenusSpecies, spec$PlantGenusSpecies))#
spec$IntGen <-  fix.white.space(paste(spec$Genus, spec$PlantGenus))#
#
prep.comm <- aggregate(spec$GenusSpecies,#
                       list(site=spec$PlantGenusSpecies,#
                            sp=spec$GenusSpecies), length)#
comm <- samp2site.spp(prep.comm$site, prep.comm$sp, prep.comm$x)#
#
d <- specieslevel(comm, index="d")#
#
spec$PolSpec <- d$'higher level'$'d'[match(spec$GenusSpecies,#
                                             rownames(d$'higher level'))]#
#
spec$PlantSpec <- d$'lower level'$'d'[match(spec$PlantGenusSpecies,#
                                             rownames(d$'lower level'))]#
#
spec$Date <- as.Date(spec$Date, format='%m/%d/%y')#
spec$Doy <- as.numeric(strftime(spec$Date, format='%j'))#
spec$Year <- as.numeric(format(spec$Date,'%Y'))#
write.csv(spec, "spec.csv", row.names=FALSE)#
save(spec, file="spec.Rdata")#
### networks#
nets <- breakNet(spec, 'Site', 'Year')
nets[[1]]
head(nets[[1]])
names(nets)
head(nets[[2]])
head(nets[[3]])
lapply(nets, rownames)
rm(list=ls())#
library(vegan)#
library(fields)#
library(bipartite)#
setwd("~/Dropbox/skyIslands/analysis/data")#
source("src/misc.R")#
source("src/prepNets.R")#
src.dir <- '../../data/relational/data/relational/traditional/'#
spec <-#
  read.csv(file.path(src.dir, "specimens-complete.csv"))#
#
## get specimen data ready#
spec <-  spec[spec$Species != "",]#
spec$GenusSpecies <- fix.white.space(paste(spec$Genus, #
                          spec$Species,#
                          spec$SubSpecies))#
#
spec$PlantGenusSpecies <-  fix.white.space(paste(spec$PlantGenus,#
                                          spec$PlantSpecies,#
                                          spec$PlantVar, spec$PlantSubSpecies))#
spec$Int <-  fix.white.space(paste(spec$GenusSpecies, spec$PlantGenusSpecies))#
spec$IntGen <-  fix.white.space(paste(spec$Genus, spec$PlantGenus))#
#
prep.comm <- aggregate(spec$GenusSpecies,#
                       list(site=spec$PlantGenusSpecies,#
                            sp=spec$GenusSpecies), length)#
comm <- samp2site.spp(prep.comm$site, prep.comm$sp, prep.comm$x)#
#
d <- specieslevel(comm, index="d")#
#
spec$PolSpec <- d$'higher level'$'d'[match(spec$GenusSpecies,#
                                             rownames(d$'higher level'))]#
#
spec$PlantSpec <- d$'lower level'$'d'[match(spec$PlantGenusSpecies,#
                                             rownames(d$'lower level'))]#
#
spec$Date <- as.Date(spec$Date, format='%m/%d/%y')#
spec$Doy <- as.numeric(strftime(spec$Date, format='%j'))#
spec$Year <- as.numeric(format(spec$Date,'%Y'))#
write.csv(spec, "spec/spec.csv", row.names=FALSE)#
save(spec, file="spec/spec.Rdata")#
### networks#
nets <- breakNet(spec, 'Site', 'Year')#
save(nets, file="networks/nets.Rdata")
rm(list=ls())#
setwd('~/Dropbox/skyIslands/analysis/networkLevel')#
source('src/initialize.R')#
load('../data/networks/nets.Rdata')#
N <- 99
rm(list=ls())#
setwd('~/Dropbox/skyIslands/analysis/networkLevel')#
source('src/initialize.R')#
load('../data/networks/nets.Rdata')#
N <- 99#
#
## ## ************************************************************#
## ## calculate metrics and zscores#
## ## ************************************************************#
mets <- lapply(nets, network.metrics, N)#
#
cor.dats <- prep.dat(mets,  spec)#
#
cor.dats$tot.rich <- cor.dats$number.of.species.LL +#
  cor.dats$number.of.species.HL#
#
save(cor.dats, file='saved/corMets.Rdata')
rm(list=ls())#
setwd('~/Dropbox/skyIslands/analysis/networkLevel')#
source('src/initialize.R')#
load('../data/networks/nets.Rdata')#
N <- 99
rm(list=ls())#
setwd('~/Dropbox/skyIslands/analysis/networkLevel')#
source('src/initialize.R')#
load('../data/networks/nets.Rdata')#
N <- 99
mets <- lapply(nets, network.metrics, N)#
#
cor.dats <- prep.dat(mets,  spec)#
#
cor.dats$tot.rich <- cor.dats$number.of.species.LL +#
  cor.dats$number.of.species.HL#
#
save(cor.dats, file='saved/corMets.Rdata')
load('../data/spec/spec.Rdata')
source('src/initialize.R')
cor.dats <- prep.dat(mets,  spec)
cor.dats$tot.rich <- cor.dats$number.of.species.LL +#
  cor.dats$number.of.species.HL#
#
save(cor.dats, file='saved/corMets.Rdata')
cor.dats
